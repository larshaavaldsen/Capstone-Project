# Use a base image with vsftpd and Docker installed
FROM ubuntu:latest

# Install vsftpd and Docker
RUN apt-get update && \
    apt-get install -y vsftpd docker.io

# Configure vsftpd
RUN mkdir -p /var/run/vsftpd/empty && \
    mkdir -p /etc/vsftpd && \
    mkdir -p /ftp && \
    mkdir -p /secure && \
    echo "FLAG{SECURE_FLAG}" > /secure/flag.txt && \
    chmod 700 /secure && \
    echo "anonymous_enable=YES" > /etc/vsftpd.conf && \
    echo "local_enable=NO" >> /etc/vsftpd.conf && \
    echo "write_enable=YES" >> /etc/vsftpd.conf && \
    echo "anon_root=/ftp" >> /etc/vsftpd.conf && \
    echo "anon_upload_enable=YES" >> /etc/vsftpd.conf && \
    echo "anon_mkdir_write_enable=YES" >> /etc/vsftpd.conf && \
    echo "chroot_local_user=YES" >> /etc/vsftpd.conf && \
    echo "allow_writeable_chroot=YES" >> /etc/vsftpd.conf && \
    echo "listen=NO" >> /etc/vsftpd.conf && \
    echo "listen_ipv6=YES" >> /etc/vsftpd.conf

# Add initial Dockerfile to FTP directory
RUN echo "FROM busybox\nRUN cat /host_secure/flag.txt" > /ftp/Dockerfile

# Add rebuild script
RUN echo "#!/bin/bash\nwhile true; do\n cp /ftp/Dockerfile /build/Dockerfile\n docker build -t challenge-image /build --volume /secure:/host_secure\n sleep 60\ndone" > /rebuild.sh && chmod +x /rebuild.sh

# Start script
CMD service vsftpd start && /rebuild.sh
